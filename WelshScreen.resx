<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEsAAABLCAYAAAA4TnrqAAAABGdBTUEAALGPC/xhBQAABmZJREFUeF7t
        XE2IHEUUnt0EfxCyroghPV1V3T2zBhddUC8SRPYseFFy8iLmJB48ektEQUEQBMGLBw+KB0X0qnjTg178
        OwWCl0Dw/yDGxGQ3Wb/aeRN6e7/ururu6Z+sH3wwmX7v1Xs1Va9eVXV21AGWwaXZR3fo8XhHjcfXI6Uu
        4J/e+kPCklHqFQR83QZtGUXRnfKsFEkY/jzXyzIKw2ta60REh4swDM8goGvZAOcUsVIw3SwTrT8X8cFh
        mQVEuCXyucDIuTEaizgx5idRGRyWWECUWj8sOgyunb6jguCy6AwPLKA8QpwmbDxzGlWWBiNQ1IYHFlAB
        WaDOo8oSC8iB6aydOAz/wQp529SYhxJjnmQyJRx0ZzlPoaYoTRfiuDHPusq2BjiUWzIsiIUjy9Z1PvJN
        wFbfTrDOZJxbOKXpLIpy32I6zK428wZQbN4uX+fCyol8q4y1fkJcWIbPLqO72Q5DdXyaNLKDRPwRHu9b
        9uFw21OwHtGp4nptuCzh21bOUbaXxCi0MdSCeyV+E1BirgYYaC3v2JwYK3UOfDk25lQSRWfw+ccIxSae
        L9wPpJovJGx/2GHJjDZF2L+EZpxXV8ES8mHucU0div1q2D0nIkbrMgnDB6SJWpgcPXoPs1+FducgZqsD
        hhob/tjOnBKzjWKi1P2sPQ+2uhKWsTFnimBzHmm7lFBt7og6WV1dYY24EJvi78VMK0DqeIn5kUcsHj+I
        anMwSl1ijRURBevTot4q9MrKKvOHEeKLufhgjeURI2oh+ckV4ZEjdzG/sjTG3CcqjcOpQMVUOC/ynQI5
        7HXmX5Yi3jhcOqtXB3AuSd/WkxCd32VWutPcB+NwPgWxxeSAGmB++hJmDs2sOYIZSTNR6gMR7RUmxpxg
        /voQq+YVMVcOJMKnmJE0RbSXYP56kqeXzdHo8MbGxh0Trb+FkNOWB1uY10S9l8CPHTO/fSimUMzNdvZU
        yIViptdgfvtwdPLkbt6qe2ZV+9CsDaCwvkh8dyZKotOj6NixF9hDZxZfv/cJdfe5V0dYxX4jD5xpnZj5
        0n8w/304CoNgiz1wpfgxCDD/Pbg9UkFQObmrlo5fmkLFYxxbNsyKUvLQmbbxXSMDAfz9l8WRR6jsTTFM
        yJX2RTMxMwjEUfQhiyNDO1t4Ho61fg8Clabi0EZWPB6/weKYM9L6VREthb3u9rvRGdo0VOpjGocQIv4H
        AdPp9FaXZDjAnFW4fYNIvVMTZjTFQXUW/C2cORCp3Vllv8ZgwPxPM1bqLxGthnA8/p0ZnhMih2eS/Qfz
        nxGi1XYl9siGGZzTvv8por3G5uZmYRxZTrVeF1UvHGLGUhxEFY/dhve7G1g9/WJLxuO3maE0Ida7s/cs
        mN+uhHr5GbzR+iumnCUS49ei0kugZHic+e1DMcWBXPQ3U8qjqPUSzF8fhkGQf8DpXcmDkTFnRb1XsCec
        zF8fGmNOiLm90DXOt6Dud7/WApifvhRTe6GCoPYLbGKqF4A/teOxg0fM7UEjbxpHSvXiAmOi1Dnmny9h
        iq/0ZRtNV07j+Dsx2QkSpZ5jflWhmKRo7FXuaRR10mEoY55n/mSJgZF+AXh5aswndlbgmeXuiUtszK/y
        nANGal1gpGlXVTHbCmKtzzM/CJs7LSHGaxEmF31dZmeE82mvlZ+pNQAMx8usEYwU+3cVnoHIbmNMJo/Q
        W8j7pdjwvsPay2MShm+KanPAkrmNAP/Ax6JfwTvHYap8avVm6tWBoF9k9suImDo9sKy6KNg/XvEo9F0L
        2eU1rRPoee8ushR7ncHrrIgRBfG2vVoD7Yi+gO+27H8SH9e8MWdUSk3E727AnOoxu5uK6+vrtxCHek24
        3dyK6ANMG7p69pmBUl+K++2COTMEivutorEtUlViZP9pjHmQPSsifG/3SCkOguPMkUXTFshoPhus8w83
        Ueot0WkPcNrnpCK7Ci1jVFwhcoW0NzWiTwGZwq0PRBa9/eJgzuSwcLkm8rmMlfpF1HIRh+H7RLfba7u1
        tbXHiFP7KOK5QFHqXHzeGwR3i1oZbhxootj9Rr7rHpHWZ9MBpehUAE6n00eILiXEfWokK9tNTVUGBLNn
        7yZfOyGtV0QRv2lgE7f3lgIdUbpY2Okq4gcbqJVKb47xI3wm4gcepXWSlZmJ/g87Fa+mO8e+p2+nHkbU
        xUTrd0WsA4xG/wFZtF0o9LzJ3QAAAABJRU5ErkJggg==
</value>
  </data>
</root>